/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PackageFrm;

import Conexion.ConexionDes;
import Conexion.ConexionOri;
import java.awt.BorderLayout;
import java.io.PrintStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADRIAN
 */
public class IrpRucVen extends javax.swing.JInternalFrame {

    /**
     * Creates new form IrpRucVen
     */
    public IrpRucVen() {
        initComponents();
    }
    String Proceso = "";
    int selectcount = 0;
    int setRowCount = 0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setTitle("RucVen IRP");

        jButton1.setText("Actualizar Facturas de RucVen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Proceso", "Cantidad de Registros"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(500);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        jButton2.setText("Migrar Cobros y Generar Cuotas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(327, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void CargarGrid(){        
        JTable table = null;
        JScrollPane ScrollPane;
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        if(setRowCount==0){
           modelo.setRowCount(0);
        }
        try {
             Vector v = new Vector();
             v.add(Proceso);
             v.add(selectcount);
             modelo.addRow(v);
             jTable1.setModel(modelo);
             ScrollPane = new JScrollPane(table);
             jTable1.add(ScrollPane,BorderLayout.CENTER); 
             setRowCount++;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex, "Error"+ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Proceso = "Actualizar Facturas de RucVen (IRP)";
        int nRucVenTipIng = 0;
        try {
            Connection con = ConexionOri.GetConnection();
            java.sql.Statement cm=con.createStatement();
            ResultSet rs= cm.executeQuery("SELECT RucVenTipVenId,RucVenTipEmp,RucVenTipVen,RucVenTipOtr,\n" +
            "RucVenTipVen2,RucVenTipNoEnv,RucVenTipExe,RucVenTipGra,RucVenTipVen3\n" +
            "FROM RUCVEN AS RV\n" +
            "INNER JOIN RUCVENTIP AS RT ON RT.RucVenTipVenId = RV.RucVenId and RT.RucVenTipEmp = RV.RucVenEmp");
            while(rs.next()){
                selectcount++;
                //irp v2
                if(rs.getInt("RucVenTipVen2")==0 && rs.getInt("RucVenTipVen3")==0) {
                    switch(rs.getInt("RucVenTipVen")){
                    case 3:
                        nRucVenTipIng=4;    
                        break; 
                    case 0:
                        nRucVenTipIng=1;    
                        break;
                    case 1:
                        nRucVenTipIng=2;    
                        break;
                    case 2:
                        nRucVenTipIng=3;    
                        break;                    
                }
                }else{
                    if(rs.getInt("RucVenTipVen3")==0){//irp v3
                        nRucVenTipIng=rs.getInt("RucVenTipVen2");
                    }else {//irp v3 actualizado
                        nRucVenTipIng=rs.getInt("RucVenTipVen3");
                    }
                    
                }                
                Connection con2 = ConexionDes.GetConnection();                 
                java.sql.Statement cm2 = con2.createStatement(); 
                String RucVenTipEmp = rs.getString("RucVenTipEmp").replace(" ","");
                PreparedStatement query = con2.prepareStatement("UPDATE RucVen set RucVenTipIng= '"+nRucVenTipIng+" ',RucVenIrpRub= ' "+rs.getInt("RucVenTipOtr")+" ',RucVenNoGraIrp= ' "+rs.getInt("RucVenTipExe")+ " ' WHERE RucVenEmp= '" + RucVenTipEmp + "' and RucVenId = '" + rs.getInt("RucVenTipVenId") + "'");
                query.execute();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex, "Error"+ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
        CargarGrid();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int Proceso1CuotasCobro = 0;
        int Proceso2CuotasCobroLevel = 0;
        int Proceso3CobroCuota = 0;
        int Proceso4GenAuxCom = 0;
        //Girlsway Brandi Love & Nicole Aniston's Lesbian Power Play!
        try {
            SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
            String fcha = "2020/01/01";
            Date date = formato.parse(fcha);            
            formato.applyPattern("yyyy-MM-dd");
            String nuevoFormato = formato.format(date);
            Date date2 = formato.parse(nuevoFormato);
            System.out.println(date2);
            Connection con = ConexionOri.GetConnection();
            java.sql.Statement cm=con.createStatement();
            ResultSet rs= cm.executeQuery("SELECT RucVenCanCuo,RucVenId, SucId, SucEmp, CliId, CliEmp, RucVenUsr, RucVenEmp, RucVenCenCos, RucVenTot, RucVenFec, \n" +
            "RucVenPriVen, RucVenTipCmp, RucVenCam, RucVenImp, RucVenMon, RucVenNoFac, TotalRecibo , ReciboNro, ReciboFec, \n" +
            "ReciboImp, ReciboCam, ReciboImpMe, ReciboMon, ReciboObs, ReciboUsr \n" +
            "FROM RUCVEN AS A \n" +
            "LEFT JOIN (SELECT ReciboNro, ReciboFec, ReciboImp, ReciboCam, ReciboImpMe, ReciboMon, ReciboObs, \n" +
            "ReciboUsr,ReciboRucVenId, Sum(ReciboImp) as TotalRecibo \n" +
            "FROM RECIBO GROUP BY ReciboRucVenId,ReciboEmp,ReciboNro,ReciboFec,ReciboImp,ReciboCam,\n" +
            "ReciboImpMe,ReciboMon,ReciboObs,ReciboUsr) AS B ON B.ReciboRucVenId = A.RucVenId \n" +
            "Where RucVenFmaPgo = 2 And RucVenCanCuo > 0"); 
            int CanCuota = 0;
            long Importe = 0;
            long ImporteMe = 0;
            long ImporteCuota = 0;
            long ImporteCuotaMe = 0;
            long ImporteReciboRuc = 0;
            long ImporteAjus = 0;
            //new
            long CuotaCobroSaldoCuo = 0; 
            long CuotaCobroSaldo = 0;
            long CuotaCobroImp = 0;
            double CuotaCobroImpME = 0.0;
            double CuotaCobroAju = 0.0;
            double CuotaCobroSalImpMe = 0.0;
            //new
            long IdUsar = 0;
            int IdUsarCobro = 0;
            Date Fecha;            
            while(rs.next()){
                Connection con2 = ConexionDes.GetConnection(); 
                java.sql.Statement cm2 = con2.createStatement();
                PreparedStatement stm = con2.prepareStatement("INSERT INTO CUOTASCOBRO (CuotaCobroUltNro, CuotaCobroNroAnt, CuotaCobroRucVenId, CuotaCobroAntId, SucId, SucEmp, CliId, CliEmp, CuotaCobroUsr, CuotaCobroEmp, CuotaCobroCentro, CuotaCobroIdRecha, CuotaCobroPorCom, CuotaCobroSuc, CuotaCobroRecId, CobroCobId, CuotaCobroZona, CuotaCobroVenId, CuotaCobroFacId) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                stm.setInt(1, rs.getInt("RucVenCanCuo"));
                stm.setInt(2, 0);
                stm.setInt(3, rs.getInt("RucVenId"));
                stm.setInt(4, 0);
                stm.setString(5, rs.getString("SucId"));
                stm.setString(6, rs.getString("SucEmp"));
                stm.setInt(7, rs.getInt("CliId"));
                stm.setString(8, rs.getString("CliEmp"));
                stm.setInt(9, rs.getInt("RucVenUsr"));
                stm.setString(10, rs.getString("RucVenEmp"));
                stm.setString(11, rs.getString("RucVenCenCos"));
                stm.setInt(12, 0);
                stm.setInt(13, 0);
                stm.setString(14, "");
                stm.setInt(15, 0);
                stm.setString(16, "");
                stm.setString(17, "");
                stm.setString(18, "");
                stm.setInt(19, 0);
                stm.execute();
                Proceso1CuotasCobro ++;
                CanCuota = rs.getInt("RucVenCanCuo");               
                Fecha = rs.getDate("RucVenPriVen");
                Connection con3 = ConexionDes.GetConnection(); 
                java.sql.Statement cm3 = con3.createStatement();
                ResultSet rs2= cm3.executeQuery("SELECT MAX(CuotaCobroId) AS IdUsar FROM CUOTASCOBRO");
                while (rs2.next()) {
                    IdUsar = rs2.getLong("IdUsar");                    
                }                
                Calendar calendario = Calendar.getInstance();
                calendario.setTime(Fecha);
                int anio = calendario.get(Calendar.YEAR);
                int mes = calendario.get(Calendar.MONTH);
                int dia = calendario.get(Calendar.DAY_OF_MONTH);//getActualMaximum(Calendar.DAY_OF_MONTH)
                LocalDateTime locaDate = LocalDateTime.now();
                int hours  = locaDate.getHour();
                int minutes = locaDate.getMinute();
                int seconds = locaDate.getSecond();
                int Ban = 0;
                int Ban2 = 0;
                Date Fecha4 = null;
                String Fecha2 = anio + "-" + mes + "-" + dia;
                SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                Date fecha1 = ft.parse(Fecha2);                
                if (rs.getLong("TotalRecibo") > 0){                    
                    CuotaCobroSaldoCuo = rs.getLong("RucVenTot");
                    if(rs.getLong("RucVenCam")>0){
                        if(rs.getDouble("RucVenImp") == rs.getDouble("ReciboImpMe")){
                            CuotaCobroSaldo = 0;
                            CuotaCobroImp = rs.getLong("RucVenTot");
                            CuotaCobroImpME = rs.getDouble("RucVenImp");
                            CuotaCobroAju = rs.getDouble("ReciboImpMe");
                            CuotaCobroSalImpMe = 0.0;
                        }else{
                            
                        }
                    }
                    Connection con4 = ConexionDes.GetConnection(); 
                    PreparedStatement stmlevel = con4.prepareStatement("INSERT INTO CUOTASCOBROLEVEL1 (CuotaCobroId,CuotaCobroLinea,CuotaCobroCon,CuotaCobroRetRen,CuotaCobroRetIva,CuotaCobroSaldoCuo,CuotaCobroFec,CuotaCobroSaldo,CuotaCobroMarcar,CuotaCobroImp,CuotaCobroVencimiento,CuotaCobroTipFactura,CuotaCobro2,CuotaCobro1,CuotaCobroCambio,CuotaCobroImpME,CuotaCobroMoneda,CuotaCobroCmp,CuotaCobroNroCanc,CuotaCobroComprom,CuotaCobroEstado,CuotaCobroAju,CuotaCobroSalImpMe,CuotaCobroFacCobId,CuotaCobroRetLey,CuotaCobroRecEst,CuotaCobroRecEmiId,CuotaCobroGrav,CuotaCobroOri,CuotaCobroMora,CuotaCobroMoraMe,CuotaCobroCobId,CuotaCobroNroNota,CuotaCobroIva05,CuotaCobroIva10,CuotaCobroGrav05,CuotaCobroGrav10,CuotaCobroExe,CuotaCobroIva05Me,CuotaCobroIva10Me,CuotaCobroGrav05Me,CuotaCobroGrav10Me,CuotaCobroExeMe,CuotaCobroFecRet,CuotaCobroNroLey,CuotaCobroFecLey,CuotaCobroMarcarRet,CuotaCobroNcME,CuotaCobroNcML,CuotaCobroRetIva05,CuotaCobroTCRet,CuotaCobroTipRenta,CuotaCobroTimbra,CuotaCobroEstMod,CuotaCobroIva,CuotaCobroImpNoGrav) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");                    
                    stmlevel.setLong(1, IdUsar);
                    stmlevel.setInt(2, 1);
                    stmlevel.setString(3, "");
                    stmlevel.setLong(4, 0);
                    stmlevel.setLong(5, 0);
                    stmlevel.setLong(6, CuotaCobroSaldoCuo); 
                    stmlevel.setDate(7, rs.getDate("RucVenFec"));// new java.sql.Date(date.getTime())
                    stmlevel.setLong(8, CuotaCobroSaldo);
                    stmlevel.setInt(9, 0);
                    stmlevel.setLong(10, CuotaCobroImp);
                    stmlevel.setDate(11, rs.getDate("RucVenFec"));//new java.sql.Date(fecha1.getTime())
                    //stmlevel.setString(11, anio + "-" + mes + "-" + dia);fecha1
                    stmlevel.setString(12, rs.getString("RucVenTipCmp"));
                    stmlevel.setInt(13, 1);
                    stmlevel.setInt(14, 1);
                    stmlevel.setLong(15, rs.getLong("RucVenCam"));
                    stmlevel.setDouble(16, CuotaCobroImpME);
                    stmlevel.setString(17, rs.getString("RucVenMon"));
                    stmlevel.setString(18, rs.getString("RucVenNoFac")); 
                    stmlevel.setInt(19, 0);
                    stmlevel.setDate(20, rs.getDate("RucVenFec"));
                    stmlevel.setInt(21, 0);
                    stmlevel.setDouble(22, CuotaCobroAju);
                    stmlevel.setDouble(23, CuotaCobroSalImpMe);
                    stmlevel.setInt(24, 0);
                    stmlevel.setInt(25, 0);
                    stmlevel.setInt(26, 0);
                    stmlevel.setInt(27, 0);
                    stmlevel.setLong(28, 0);
                    stmlevel.setString(29, "");
                    stmlevel.setLong(30, 0);
                    stmlevel.setInt(31, 0);
                    stmlevel.setString(32, "");
                    stmlevel.setLong(33, 0);
                    stmlevel.setLong(34, 0);
                    stmlevel.setLong(35, 0);
                    stmlevel.setLong(36, 0);
                    stmlevel.setLong(37, 0);
                    stmlevel.setLong(38, 0);
                    stmlevel.setLong(39, 0);
                    stmlevel.setLong(40, 0);
                    stmlevel.setLong(41, 0);
                    stmlevel.setLong(42, 0);
                    stmlevel.setLong(43, 0);
                    stmlevel.setString(44, "1753-01-01");
                    stmlevel.setString(45, "");
                    stmlevel.setString(46, "1753-01-01");
                    stmlevel.setInt(47, 0);
                    stmlevel.setInt(48, 0);
                    stmlevel.setLong(48, 0);
                    stmlevel.setLong(49, 0);
                    stmlevel.setLong(50, 0);
                    stmlevel.setInt(51, 0);
                    stmlevel.setLong(52, 0);
                    stmlevel.setInt(53, 0);
                    stmlevel.setLong(54, 0);
                    stmlevel.setLong(55, 0);
                    stmlevel.setLong(56, 0);
                    stmlevel.execute();
                    Proceso2CuotasCobroLevel ++;
//                    Connection con5 = ConexionDes.GetConnection(); 
//                    java.sql.Statement cm5 = con5.createStatement();
//                    ResultSet rs3 = cm5.executeQuery("SELECT MAX(CuotaCobroId) AS IdUsar FROM CUOTASCOBRO");
//                    while (rs3.next()) {
//                        IdUsar = rs3.getLong("IdUsar");                    
//                    }
                    /////Id CobroCuota Recuperar
                    ///Carga Recibos     
                    Connection con52 = ConexionDes.GetConnection(); 
                    java.sql.Statement cm52 = con52.createStatement();
                    ResultSet rs32 = cm52.executeQuery("SELECT MAX(CobroId)+1 AS CobroId FROM COBROCUOTA");
                    while (rs32.next()) {
                        IdUsarCobro = rs32.getInt("CobroId");
                        if(IdUsarCobro == 0){
                            IdUsarCobro = 1;
                        }
                    }
                    Connection con6 = ConexionDes.GetConnection(); 
                    java.sql.Statement cm6 = con6.createStatement();
                    PreparedStatement stmCC = con6.prepareStatement("INSERT INTO COBROCUOTA (CobroId,CobroEmp,SucId,SucEmp,CobroMoneda,CobroNroRecibo,CobroRucVenId,CobroCentro,CobroCanCuoNFac,CobroFecha,CobroUsr,CliId,CliEmp,CobroCambio,CobroImporte,CobroTotalFac,CobroAnticipo,CobroNotCre,CobroNeto,CobroRetRenta,CobroRetLey,CobroEfectivo,CobroEfeMe,CobroCheque,CobroCheMe,CobroCheCambio,CobroTarjeta,CobroRucVenta,CobroUs,CobroUsCambio,CobroPeso,CobroPesoCambio,CobroReal,CobroRealCambio,CobroEuro,CobroEuroCambio,CobroVuelto,CobroConcepto,CobroMonedaCheque,CobroEfeRecibido,CobroImpCuo,CobroCobId,CobroComis,CobroComisMe,CobroSucCliId,CobroRecEmiId,CobroMoraMe,CobroMora,CobroBanId,CobroTransfMe,CobroTransf,CobroTarjetaMe,CobroTransfNro,CobroNroRetLey,CobroNroRetRen,CobroNroRetIva,CobroFecRetLey,CobroFecRetRen,CobroFecRetIva,CobroGasBco,CobroGasBcoMe,CobroRetIVA05,CobroEstMig,CobroHora) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");                    
                    stmCC.setLong(1, IdUsarCobro);
                    stmCC.setString(2, rs.getString("RucVenEmp"));
                    stmCC.setString(3, rs.getString("SucId"));
                    stmCC.setString(4, rs.getString("SucEmp"));
                    stmCC.setString(5, rs.getString("ReciboMon"));
                    stmCC.setString(6, rs.getString("ReciboNro"));
                    stmCC.setString(7, rs.getString("RucVenId"));
                    stmCC.setString(8, rs.getString("RucVenCenCos"));
                    stmCC.setLong(9, 0);
                    stmCC.setDate(10, rs.getDate("ReciboFec"));
                    stmCC.setInt(11, rs.getInt("ReciboUsr"));
                    stmCC.setInt(12, rs.getInt("CliId"));
                    stmCC.setString(13, rs.getString("CliEmp"));
                    stmCC.setLong(14, rs.getLong("ReciboCam"));
                    stmCC.setLong(15, rs.getLong("ReciboImpMe"));
                    stmCC.setLong(16, rs.getLong("TotalRecibo"));   
                    stmCC.setLong(17, 0);
                    stmCC.setLong(18, 0);
                    stmCC.setLong(19, rs.getLong("TotalRecibo"));       
                    stmCC.setLong(20, 0);
                    stmCC.setLong(21, 0);
                    stmCC.setLong(22, rs.getLong("TotalRecibo"));
                    stmCC.setLong(23, rs.getLong("ReciboImpMe"));
                    stmCC.setLong(24, 0);
                    stmCC.setLong(25, 0);
                    stmCC.setLong(26, 0);
                    stmCC.setLong(27, 0);
                    stmCC.setLong(28, 0);
                    stmCC.setLong(29, 0);
                    stmCC.setLong(30, 0);
                    stmCC.setLong(31, 0);
                    stmCC.setLong(32, 0);
                    stmCC.setLong(33, 0);
                    stmCC.setLong(34, 0);
                    stmCC.setLong(35, 0);
                    stmCC.setLong(36, 0);
                    stmCC.setLong(37, 0);
                    stmCC.setString(38, rs.getString("ReciboObs"));
                    stmCC.setLong(39, 0);
                    stmCC.setLong(40, rs.getLong("TotalRecibo"));
                    stmCC.setLong(41, rs.getLong("TotalRecibo"));
                    stmCC.setLong(42, 0);
                    stmCC.setLong(43, 0);
                    stmCC.setLong(44, 0);
                    stmCC.setLong(45, 0);
                    stmCC.setLong(46, 0);
                    stmCC.setLong(47, 0);
                    stmCC.setInt(48, 0);
                    stmCC.setLong(49, 0);
                    stmCC.setLong(50, 0);
                    stmCC.setLong(51, 0);
                    stmCC.setLong(52, 0);
                    stmCC.setLong(53, 0);
                    stmCC.setLong(54, 0);
                    stmCC.setLong(55, 0);
                    stmCC.setLong(56, 0);
                    stmCC.setString(57, "1753-01-01");
                    stmCC.setString(58, "1753-01-01");
                    stmCC.setString(59, "1753-01-01");
                    stmCC.setLong(60, 0);
                    stmCC.setLong(61, 0);
                    stmCC.setLong(62, 0);
                    stmCC.setLong(63, 0);            
                    stmCC.setString(64, hours  + ":"+ minutes +":"+seconds);
                    stmCC.execute();
                    Proceso3CobroCuota ++;
                    ///Carga Recibos
                    ///Actualiza Numero de Cancelacion en CuotasCobroLelvel 1
                    Connection con72 = ConexionDes.GetConnection();                    
                    PreparedStatement stmGenAuxCom72 = con72.prepareStatement("Update CUOTASCOBROLEVEL1 set CuotaCobroNroCanc = ? Where CuotaCobroId = ?"); 
                    stmGenAuxCom72.setLong(1, IdUsarCobro);
                    stmGenAuxCom72.setLong(2, IdUsar);
                    stmGenAuxCom72.execute();
                    ///Actualiza Numero de Cancelacion en CuotasCobroLelvel 1
                    ///Carga GenAuxCom
                    Connection con7 = ConexionDes.GetConnection();
                    java.sql.Statement cm7 = con7.createStatement();
                    PreparedStatement stmGenAuxCom = con7.prepareStatement("INSERT INTO GENAUXCOM (GenAuxComSuc,GenAuxComCen,GenAuxComCta,GenAuxComFec,GenAuxComDeb,GenAuxComHab,GenAuxComCam,GenAuxComImp,GenAuxComDet,GenComAuxiliar,GenAuxComFecVen,GenAuxComCuotaId,GenAuxComNegId,GenAuxComCuota,GenAuxComOri) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");                    
                    stmGenAuxCom.setString(1, rs.getString("RucVenTipCmp"));
                    stmGenAuxCom.setString(2, "1/1");
                    stmGenAuxCom.setString(3, rs.getString("RucVenEmp"));
                    stmGenAuxCom.setDate(4, rs.getDate("RucVenFec"));
                    stmGenAuxCom.setLong(5, rs.getLong("RucVenTot"));
                    stmGenAuxCom.setLong(6, rs.getLong("TotalRecibo"));
                    stmGenAuxCom.setLong(7, rs.getLong("ReciboCam"));
                    stmGenAuxCom.setLong(8, rs.getLong("ReciboImpMe"));
                    stmGenAuxCom.setString(9, rs.getString("RucVenNoFac"));
                    stmGenAuxCom.setInt(10, IdUsarCobro);
                    stmGenAuxCom.setDate(11, rs.getDate("RucVenPriVen"));
                    stmGenAuxCom.setLong(12, IdUsar);
                    stmGenAuxCom.setLong(13, 0);
                    stmGenAuxCom.setLong(14, 0);
                    stmGenAuxCom.setString(15, "");
                    stmGenAuxCom.execute();
                    Proceso4GenAuxCom ++;
                    ///Carga GenAuxCom
                }else{
                    if(CanCuota == 1){
                        CuotaCobroSaldoCuo = rs.getLong("RucVenTot");
                        CuotaCobroImpME = rs.getDouble("RucVenImp");
                        CuotaCobroAju = 0.0;
                    }else{
                        
                    }
                    for (int j = 1; j <= CanCuota; j++) {
                        mes++;
                        if(mes > 12){mes = 1;Ban++; Ban2 = 1;}
                        if (Ban2 == 1){anio += Ban;}  
                        Connection con6 = ConexionDes.GetConnection(); 
                        java.sql.Statement cm6 = con6.createStatement();
                        PreparedStatement stmlevel = con6.prepareStatement("INSERT INTO CUOTASCOBROLEVEL1 (CuotaCobroId,CuotaCobroLinea,CuotaCobroCon,CuotaCobroRetRen,CuotaCobroRetIva,CuotaCobroSaldoCuo,CuotaCobroFec,CuotaCobroSaldo,CuotaCobroMarcar,CuotaCobroImp,CuotaCobroVencimiento,CuotaCobroTipFactura,CuotaCobro2,CuotaCobro1,CuotaCobroCambio,CuotaCobroImpME,CuotaCobroMoneda,CuotaCobroCmp,CuotaCobroNroCanc,CuotaCobroComprom,CuotaCobroEstado,CuotaCobroAju,CuotaCobroSalImpMe,CuotaCobroFacCobId,CuotaCobroRetLey,CuotaCobroRecEst,CuotaCobroRecEmiId,CuotaCobroGrav,CuotaCobroOri,CuotaCobroMora,CuotaCobroMoraMe,CuotaCobroCobId,CuotaCobroNroNota,CuotaCobroIva05,CuotaCobroIva10,CuotaCobroGrav05,CuotaCobroGrav10,CuotaCobroExe,CuotaCobroIva05Me,CuotaCobroIva10Me,CuotaCobroGrav05Me,CuotaCobroGrav10Me,CuotaCobroExeMe,CuotaCobroFecRet,CuotaCobroNroLey,CuotaCobroFecLey,CuotaCobroMarcarRet,CuotaCobroNcME,CuotaCobroNcML,CuotaCobroRetIva05,CuotaCobroTCRet,CuotaCobroTipRenta,CuotaCobroTimbra,CuotaCobroEstMod,CuotaCobroIva,CuotaCobroImpNoGrav) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");                        
                        stmlevel.setLong(1, IdUsar);
                        stmlevel.setInt(2, j);
                        stmlevel.setString(3, "");
                        stmlevel.setLong(4, 0);
                        stmlevel.setLong(5, 0);
                        stmlevel.setLong(6, CuotaCobroSaldoCuo);
                        stmlevel.setDate(7, rs.getDate("RucVenFec"));
                        stmlevel.setLong(8, CuotaCobroSaldoCuo);
                        stmlevel.setInt(9, 0);
                        stmlevel.setLong(10, 0);
                        stmlevel.setDate(11, new java.sql.Date(date2.getTime()));//rs.getDate("RucVenFec")//anio + "-" + mes + "-" + dia
                        stmlevel.setString(12, rs.getString("RucVenTipCmp"));  
                        stmlevel.setInt(13, CanCuota);
                        stmlevel.setInt(14, j);
                        stmlevel.setLong(15, rs.getLong("RucVenCam"));
                        stmlevel.setDouble(16, CuotaCobroImpME);
                        stmlevel.setString(17, rs.getString("RucVenMon"));
                        stmlevel.setString(18, rs.getString("RucVenNoFac")); 
                        stmlevel.setInt(19, 0);
                        stmlevel.setDate(20, new java.sql.Date(date2.getTime()));//rs.getDate("RucVenFec")//anio + "-" + mes + "-" + dia
                        stmlevel.setInt(21, 0);
                        stmlevel.setDouble(22, CuotaCobroAju);
                        stmlevel.setDouble(23, CuotaCobroImpME);
                        stmlevel.setInt(24, 0);
                        stmlevel.setInt(25, 0);
                        stmlevel.setInt(26, 0);
                        stmlevel.setInt(27, 0);
                        stmlevel.setLong(28, 0);
                        stmlevel.setString(29, "");    
                        stmlevel.setLong(30, 0);
                        stmlevel.setInt(31, 0);
                        stmlevel.setString(32, "");
                        stmlevel.setLong(33, 0);
                        stmlevel.setLong(34, 0);
                        stmlevel.setLong(35, 0);
                        stmlevel.setLong(36, 0);
                        stmlevel.setLong(37, 0);
                        stmlevel.setLong(38, 0);
                        stmlevel.setLong(39, 0);
                        stmlevel.setLong(40, 0);
                        stmlevel.setLong(41, 0);
                        stmlevel.setLong(42, 0);
                        stmlevel.setLong(43, 0);
                        stmlevel.setString(44, "1753-01-01");
                        stmlevel.setString(45, "");
                        stmlevel.setString(46, "1753-01-01");
                        stmlevel.setInt(47, 0);
                        stmlevel.setInt(48, 0);
                        stmlevel.setLong(48, 0);
                        stmlevel.setLong(49, 0);
                        stmlevel.setLong(50, 0);
                        stmlevel.setInt(51, 0);
                        stmlevel.setLong(52, 0);
                        stmlevel.setInt(53, 0);
                        stmlevel.setLong(54, 0);
                        stmlevel.setLong(55, 0);
                        stmlevel.setLong(56, 0);
                        stmlevel.execute();
                        Proceso2CuotasCobroLevel ++;
                        Ban2 = 0;                        
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex, "Error"+ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
        if(Proceso1CuotasCobro>0){
            Proceso = "Migrar Cobros y Generar Cuotas: Fueron Insertadas " + Proceso1CuotasCobro + " registros en CUOTASCOBRO";
            selectcount = Proceso1CuotasCobro;
            CargarGrid();
        }
        if(Proceso2CuotasCobroLevel>0){
            Proceso = "Migrar Cobros y Generar Cuotas: Fueron Insertadas " + Proceso2CuotasCobroLevel + " registros en CUOTASCOBROLEVEL1";
            selectcount = Proceso1CuotasCobro;
            CargarGrid();            
        }
        if(Proceso3CobroCuota>0){
            Proceso = "Migrar Cobros y Generar Cuotas: Fueron Insertadas " + Proceso3CobroCuota + " registros en COBROCUOTAS";
            selectcount = Proceso3CobroCuota;
            CargarGrid();                        
        }
        if(Proceso4GenAuxCom>0){
            Proceso = "Migrar Cobros y Generar Cuotas: Fueron Insertadas " + Proceso4GenAuxCom + " registros en GENAUXCOM";
            selectcount = Proceso4GenAuxCom;
            CargarGrid();            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
