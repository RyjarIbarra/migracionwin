/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PackageFrm;

import Conexion.Conexion;
import Conexion.ConexionDes;
import Conexion.ConexionOri;
import java.awt.BorderLayout;
import java.io.PrintStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADRIAN
 */
public class IrpRucVen extends javax.swing.JInternalFrame {

    /**
     * Creates new form IrpRucVen
     */
    public IrpRucVen() {
        initComponents();
    }
    String Proceso = "";
    int selectcount = 0;
    int setRowCount = 0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setTitle("RucVen IRP");

        jButton1.setText("Actualizar Facturas de RucVen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Proceso"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(500);
        }

        jButton2.setText("Migrar Cobros y Generar Cuotas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Migrar Ganancia de Capital");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 109, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void CargarGrid(){        
        JTable table = null;
        JScrollPane ScrollPane;
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        if(setRowCount==0){
           modelo.setRowCount(0);
        }
        try {
             Vector v = new Vector();
             v.add(Proceso);
             modelo.addRow(v);
             jTable1.setModel(modelo);
             ScrollPane = new JScrollPane(table);
             jTable1.add(ScrollPane,BorderLayout.CENTER); 
             setRowCount++;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex, "Error"+ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Proceso = "Actualizar Facturas de RucVen (IRP)";
        int nRucVenTipIng = 0;
        try {
                Connection con = ConexionDes.GetConnection();
                PreparedStatement psql=con.prepareStatement("Update RV\n" +
                "Set RV.RucVenTipIng =\n" +
                "Case When RucvenTipRub515 = 30 OR RucvenTipRub515 = 31 Then \n" +
                "    RucvenTipRub515\n" +
                "Else \n" +
                "	Case When RT.RucVenTipVen2 = 0 And RT.RucVenTipVen3 = 0 Then\n" +
                "	  Case When RT.RucVenTipVen = 3 Then 4\n" +
                "		   When RT.RucVenTipVen = 0 Then 1\n" +
                "		   When RT.RucVenTipVen = 1 Then 2\n" +
                "		   When RT.RucVenTipVen = 2 Then 3\n" +
                "	  End\n" +
                "	Else\n" +
                "	  Case When RT.RucVenTipVen3 = 0 Then\n" +
                "		  RT.RucVenTipVen2\n" +
                "	  Else\n" +
                "		  RT.RucVenTipVen3\n" +
                "	  End\n" +
                "	End\n" +
                " End\n" +
                ",RucVenIrpRub = RucVenTipOtr, RucVenNoGraIrp = RucVenTipExe\n" +
                "FROM "+Conexion.conexiondesvar+".dbo.RUCVEN AS RV\n" +
                "INNER JOIN "+Conexion.conexionorivar+".dbo.RUCVENTIP AS RT ON RT.RucVenTipVenId = RV.RucVenId and RT.RucVenTipEmp = RV.RucVenEmp");
                psql.execute();
                psql.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex, "Error"+ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            Proceso = "Problemas en el Proceso. Actualizacion no Realizada";
        }
        CargarGrid();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Proceso = "Migracion de Cobros y Generacion de Cuotas Realizada Con Exito";
        try {
                Connection con = ConexionDes.GetConnection();
                PreparedStatement psql=con.prepareStatement("DELETE FROM "+Conexion.conexiondesvar+".[dbo].[CUOTASCOBRO]\n" +
                "INSERT INTO "+Conexion.conexiondesvar+".[dbo].[CUOTASCOBRO]\n" +
                "([CuotaCobroUltNro],[CuotaCobroNroAnt],[CuotaCobroRucVenId],[CuotaCobroAntId],[SucId],[SucEmp],[CliId],[CliEmp]\n" +
                ",[CuotaCobroUsr],[CuotaCobroEmp],[CuotaCobroCentro],[CuotaCobroIdRecha],[CuotaCobroPorCom],[CuotaCobroSuc],[CuotaCobroRecId]\n" +
                ",[CobroCobId],[CuotaCobroZona],[CuotaCobroVenId],[CuotaCobroFacId],[CuotaCobroTCRet])\n" +
                "SELECT 1, 0, RucVenId, 0, SucId, SucEmp, CliId, CliEmp\n" +
                ", RucVenUsr, RucVenEmp, RucVenCenCos, 0, 0, '', 0\n" +
                ", 0, 0, 0, 0, 0\n" +
                "FROM "+Conexion.conexionorivar+".dbo.RUCVEN AS RE\n" +
                "WHERE RucVenFmaPgo = 2\n" +
                
                "DELETE FROM "+Conexion.conexiondesvar+".[dbo].[CUOTASCOBROLEVEL1]\n" +
                "INSERT INTO "+Conexion.conexiondesvar+".[dbo].[CUOTASCOBROLEVEL1]\n" +
                "([CuotaCobroId],[CuotaCobroLinea],[CuotaCobroCon],[CuotaCobroRetRen],[CuotaCobroRetIva],[CuotaCobroSaldoCuo]\n" +
                ",[CuotaCobroFec],[CuotaCobroSaldo],[CuotaCobroMarcar],[CuotaCobroImp],[CuotaCobroVencimiento],[CuotaCobroTipFactura]\n" +
                ",[CuotaCobro2],[CuotaCobro1],[CuotaCobroCambio],[CuotaCobroImpME],[CuotaCobroMoneda],[CuotaCobroCmp]\n" +
                ",[CuotaCobroNroCanc],[CuotaCobroComprom],[CuotaCobroEstado],[CuotaCobroAju],[CuotaCobroSalImpMe],[CuotaCobroFacCobId]\n" +
                ",[CuotaCobroRetLey],[CuotaCobroRecEst],[CuotaCobroRecEmiId],[CuotaCobroGrav],[CuotaCobroOri],[CuotaCobroMora]           \n" +
                ",[CuotaCobroMoraMe],[CuotaCobroCobId],[CuotaCobroNroNota],[CuotaCobroIva05],[CuotaCobroIva10],[CuotaCobroGrav05]           \n" +
                ",[CuotaCobroGrav10],[CuotaCobroExe],[CuotaCobroIva05Me],[CuotaCobroIva10Me],[CuotaCobroGrav05Me],[CuotaCobroGrav10Me]           \n" +
                ",[CuotaCobroExeMe],[CuotaCobroFecRet],[CuotaCobroNroLey],[CuotaCobroFecLey],[CuotaCobroMarcarRet],[CuotaCobroNcME]           \n" +
                ",[CuotaCobroNcML],[CuotaCobroRetIva05],[CuotaCobroTCRet],[CuotaCobroTipRenta],[CuotaCobroTimbra],[CuotaCobroEstMod]           \n" +
                ",[CuotaCobroIva],[CuotaCobroImpNoGrav],[CuotaCobroCuota],[CuotaCobroIrpGDC])\n" +
                "SELECT \n" +
                "CCL1.CuotaCobroId, 1, '', 0, 0, RucVenTot,\n" +
                "RucVenFec, RucVenTot, 0, RucVenTot, RucVenFec, RucVenTipCmp, \n" +
                "1, 1, RucvenCam, RucVenImp, RucVenMon, RucVenNoFac, \n" +
                "0, RucVenFec, 0, 0, 0, 0,\n" +
                "0, 0, 0, 0, '', 0,\n" +
                "0, 0, 0, 0, 0, 0,\n" +
                "0, 0, 0, 0, 0, 0,\n" +
                "0, 0, 0, 0, 0, 0,\n" +
                "0, 0, 0, 0, 0, 0,\n" +
                "0, 0, 0, 0\n" +
                "FROM "+Conexion.conexionorivar+".[dbo].RUCVEN RV\n" +
                "INNER JOIN "+Conexion.conexiondesvar+".[dbo].[CUOTASCOBRO] AS CCL1 ON CCL1.CuotaCobroRucVenId = RV.RucVenId AND CCL1.CuotaCobroEmp = RV.RucVenEmp\n" +
                "WHERE RucVenFmaPgo = 2\n" +
                        
                "DELETE FROM "+Conexion.conexiondesvar+".[dbo].[COBROCUOTA]\n" +
                "INSERT INTO "+Conexion.conexiondesvar+".[dbo].[COBROCUOTA]\n" +
                "([CobroId]\n" +
                ",[CobroEmp],[SucId],[SucEmp],[CobroMoneda],[CobroNroRecibo],[CobroRucVenId],[CobroCentro],[CobroCanCuoNFac],[CobroFecha]\n" +
                ",[CobroUsr]\n" +
                ",[CliId],[CliEmp],[CobroCambio],[CobroImporte],[CobroTotalFac],[CobroAnticipo],[CobroNotCre],[CobroNeto],[CobroRetIVA]\n" +
                ",[CobroRetRenta],[CobroRetLey],[CobroNroCtr],[CobroEfectivo],[CobroEfeME],[CobroCheque],[CobroCheME],[CobroCheCambio]\n" +
                ",[CobroTarjeta],[CobroRucVenta],[CobroUS],[CobroUSCambio],[CobroPeso],[CobroPesoCambio],[CobroReal]\n" +
                ",[CobroRealCambio],[CobroEuro],[CobroEuroCambio],[CobroVuelto],[CobroConcepto],[CobroMonedaCheque],[CobroHora]\n" +
                ",[CobroEfeRecibido],[CobroImpCuo],[CobroCobId],[CobroComis],[CobroComisMe],[CobroSucCliId],[CobroRecEmiId],[CobroMoraMe]\n" +
                ",[CobroMora],[CobroBanId],[CobroTransfMe],[CobroTransf],[CobroTarjetaMe],[CobroTransfNro],[CobroNroRetLey],[CobroNroRetRen]\n" +
                ",[CobroNroRetIva],[CobroFecRetLey],[CobroFecRetRen],[CobroFecRetIva],[CobroGasBco],[CobroGasBcoMe],[CobroRetIVA05]\n" +
                ",[CobroEstMig])\n" +
                "SELECT \n" +
                "ReciboNro\n" +
                ", ReciboEmp, SucId, RucVenEmp, ReciboMon, ReciboNro, RucVenId, RucVenCenCos, 0, ReciboFec\n" +
                ", ReciboUsr\n" +
                ", CliId, RucVenEmp, ReciboCam, ReciboImpMe, ReciboImp, 0, 0, ReciboImp, 0\n" +
                ", 0, 0, 0, ReciboImp, ReciboImpMe, 0, 0, 0\n" +
                ", 0, 0, 0, 0, 0, 0, 0 \n" +
                ", 0, 0, 0, 0, ReciboObs, 0, 0 \n" +
                ", ReciboImp, ReciboImp, 0, 0, 0, 0, 0, 0\n" +
                ", 0, 0, 0, 0, 0, 0, 0, 0\n" +
                ", 0, 0, 0, 0, 0, 0, 0, \n" +
                "0\n" +
                "FROM "+Conexion.conexionorivar+".dbo.RECIBO AS RE\n" +
                "INNER JOIN "+Conexion.conexionorivar+".dbo.RUCVEN AS RV ON RV.RucVenId = RE.ReciboRucVenId AND RV.RucVenEmp = RE.ReciboEmp\n" +
                        
                "DELETE FROM "+Conexion.conexiondesvar+".[dbo].[GENAUXCOM]\n" +
                "INSERT INTO "+Conexion.conexiondesvar+".[dbo].[GENAUXCOM]\n" +
                "([GenAuxComSuc],[GenAuxComCen],[GenAuxComCta],[GenAuxComFec],[GenAuxComDeb],[GenAuxComHab],[GenAuxComCam]\n" +
                ",[GenAuxComImp],[GenAuxComDet],[GenComAuxiliar],[GenAuxComFecVen],[GenAuxComCuotaId],[GenAuxComNegId],[xx],[GenAuxComCuota],\n" +
                "[GenAuxComOri],[GenAuxComNroIden],[GenAuxComNroLin])\n" +
                "SELECT RucVenTipCmp, '1/1', RucVenEmp, RucVenFec, RucVenTot, ReciboImp, ReciboCam\n" +
                ", ReciboImpMe, RucVenNoFac, ReciboNro, RucVenFec, 0, 0, 0, 0\n" +
                ", '', 0,0\n" +
                "FROM "+Conexion.conexionorivar+".dbo.RECIBO AS RE\n" +
                "INNER JOIN "+Conexion.conexionorivar+".dbo.RUCVEN AS RV ON RV.RucVenId = RE.ReciboRucVenId AND RV.RucVenEmp = RE.ReciboEmp\n" +
                
                "Update GAC\n" +
                "Set GAC.GenAuxComCuotaId = CC.CuotaCobroId\n" +
                "From GENAUXCOM As GAC\n" +
                "Inner Join CUOTASCOBROLEVEL1 As CCL1 On GAC.GenAuxComDet = CCL1.CuotaCobroCmp\n" +
                "Inner join CUOTASCOBRO As CC On CCL1.CuotaCobroId = CC.CuotaCobroId And CC.SucEmp = GAC.GenAuxComCta\n" +
                
                "Update CCL1\n" +
                "Set CCL1.CuotaCobroSaldo = CCL1.CuotaCobroSaldo - GAC.GenAuxComHab, CCL1.CuotaCobroMarcar = 1, \n" +
                "CuotaCobroImp = CuotaCobroImp - GAC.GenAuxComHab\n" +
                "From CUOTASCOBROLEVEL1 As CCL1\n" +
                "INNER JOIN GENAUXCOM AS GAC ON GAC.GenAuxComDet = CCL1.CuotaCobroCmp\n" +
                "INNER JOIN CUOTASCOBRO AS CC ON CC.CuotaCobroId = CCL1.CuotaCobroId AND GAC.GenAuxComCta = CC.CuotaCobroEmp");
                psql.execute();
                psql.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex, "Error"+ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            Proceso = "Problemas en el Proceso. Migracion de  Cobros y Generacion de Cuotas no Realizada";
        }
        CargarGrid();        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Proceso = "Migracion de Ganacia Capital Realizada Con Exito";
        try {
                Connection con = ConexionDes.GetConnection();
                PreparedStatement psql=con.prepareStatement("DELETE FROM "+Conexion.conexiondesvar+".dbo.VENIRP INSERT INTO "+Conexion.conexiondesvar+".dbo.VENIRP (VenIrpId, VenIrpRucVenId, VenIrpEmp, VenIrpBieId, VenIrpImp, VenIrpTip)\n" +
                "Select VenIrpId, VenIrpRucVenId, VenIrpEmp, \n" +
                "Case \n" +
                "  When VenIrpBieId = 1 Then 1 \n" +
                "  When VenIrpBieId = 2 Then 5\n" +
                "  When VenIrpBieId = 3 Then 2\n" +
                "  When VenIrpBieId = 4 Then 3\n" +
                "  When VenIrpBieId = 5 Then 4\n" +
                "  When VenIrpBieId = 6 Then 6\n" +
                "  When VenIrpBieId = 7 Then 7\n" +
                "  When VenIrpBieId = 8 Then 8\n" +
                "  When VenIrpBieId = 9 Then 10\n" +
                "  When VenIrpBieId = 10 Then 11\n" +
                "  When VenIrpBieId = 11 Then 12\n" +
                "  When VenIrpBieId = 12 Then 13\n" +
                "  When VenIrpBieId = 13 Then 14\n" +
                "  When VenIrpBieId = 14 Then 15\n" +
                "  When VenIrpBieId = 15 Then 16\n" +
                "End as VenIrpBieId,\n" +
                "VenIrpImp, VenIrpTip  \n" +
                "From "+Conexion.conexionorivar+".dbo.VENIRP");
                psql.execute();
                psql.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex, "Error"+ex.getMessage(), JOptionPane.ERROR_MESSAGE);
            Proceso = "Problemas en el Proceso. Migracion de Ganancia Capital no Realizada";
        }
        CargarGrid();        
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
